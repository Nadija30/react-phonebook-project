{"version":3,"file":"static/js/713.42eb822b.chunk.js","mappings":"oPAAaA,EAAqB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAE1BC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,E,kGCOnBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAsBJ,EAAAA,EAAAA,WAAS,GAA/B,eAAOK,EAAP,KAAYC,EAAZ,KACMC,GAAWC,EAAAA,EAAAA,eACXf,GAAWgB,EAAAA,EAAAA,aAAYlB,IAC7BmB,EAAAA,EAAAA,YAAU,WACRJ,GAAO,EACR,GAAE,CAACb,IAEJ,IAAMkB,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,MACnB,SADuC,EAAbZ,KAClBC,EAAQW,GACxBT,EAAUS,EAChB,EAyBKC,EAAY,SAACrB,EAAUsB,GAC3B,OAAOtB,EAASuB,MACd,qBAAGf,KAAgBgB,gBAAkBF,EAAOd,KAAKgB,aAAjD,GAEH,EAEKC,EAAQ,WACZhB,EAAQ,IACRE,EAAU,GACX,EAED,OACE,iCACE,SAACe,EAAA,EAAD,CAAQC,GAAIC,EAAAA,GAAZ,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SAAwC,iBAGxC,UAACC,EAAA,EAAD,CAAKF,UAAU,OAAOG,SA1CC,SAAAC,GACzBA,EAAMC,iBACN,IAAMC,EAAO,CAAE7B,KAAAA,EAAME,OAAAA,GACfY,GAAM,kBAAQe,GAAR,IAAcC,IAAIC,EAAAA,EAAAA,iBAEMC,IAAhCnB,EAAUrB,EAAUsB,IAKxBR,GAAS2B,EAAAA,EAAAA,IAAoBnB,IAC1BoB,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,UACKD,EAAsBpC,KAD3B,mCAGD,IACAsC,OAAM,WACLD,EAAAA,GAAAA,QAAc,2BACf,IACHpB,KAdEoB,EAAAA,GAAAA,QAAA,UAAiBvB,EAAOd,KAAxB,2BAeH,EAqBuDmB,GAAI,CAAEoB,GAAI,GAA9D,WACE,SAACC,EAAA,EAAD,CACErB,GAAI,CAAEsB,gBAAiB,8BACvBC,WAAY,CACVC,UAAW,OACXC,QAAS,qHAEXC,OAAO,SACPC,WAAS,EACTC,MAAM,OACNC,KAAK,OACLhD,KAAK,OACLY,MAAOZ,EACPiD,MAAM,yIACNC,UAAQ,EACRC,YAAY,iBACZC,SAAU1C,KAEZ,SAAC8B,EAAA,EAAD,CACErB,GAAI,CAAEsB,gBAAiB,8BACvBC,WAAY,CACVC,UAAW,MACXC,QACE,kEAEJC,OAAO,SACPC,WAAS,EACTC,MAAM,eACNC,KAAK,MACLhD,KAAK,SACLY,MAAOV,EACP+C,MAAM,+FACNC,UAAQ,EACRC,YAAY,mBACZC,SAAU1C,KA+BZ,UAAC2C,EAAA,EAAD,CACEL,KAAK,SACLF,WAAS,EACTtB,QAAQ,YACRL,GAAI,CACFoB,GAAI,EACJe,GAAI,EACJC,QAAS,OACTC,IAAK,GART,UAWGpD,IAAO,SAAC,KAAD,KACR,uBAAG,wBAKZ,E,oBCrJD,EAAiC,+BCMpBqD,EAAS,WACpB,IAAMnD,GAAWC,EAAAA,EAAAA,eAEXmD,GAASlD,EAAAA,EAAAA,aAAYmD,EAAAA,IAO3B,OACE,UAAClC,EAAA,EAAD,CAAKF,UAAU,MAAMqC,UAAWC,EAAhC,WACE,SAAC3C,EAAA,EAAD,CAAQC,GAAIC,EAAAA,GAAZ,UACE,SAAC0C,EAAA,EAAD,OAEF,SAACtB,EAAA,EAAD,CACEK,OAAO,SACPH,WAAY,CACVC,UAAW,OACXC,QAAS,qHAEXzB,GAAI,CACF4C,MAAO,IACPC,QAAS,8BAEXjB,MAAM,yBACNC,KAAK,OACLhD,KAAK,SACLY,MAAO8C,EACPT,MAAM,iBACNG,SAzBiB,SAAAzB,GACrB,IAAQf,EAAUe,EAAMsC,cAAhBrD,MACRN,GAAS4D,EAAAA,EAAAA,IAAUtD,GACpB,MA0BF,ECxCD,EAA+B,4BCIlBuD,EAAQ,WACnB,IAAMtE,GAAQW,EAAAA,EAAAA,aAAYZ,GAE1B,OACE,gBAAKgE,UAAWC,EAAhB,UACE,yBAAG,uDAAahE,MAGrB,ECZD,EAA2B,mCCCduE,EAAoB,WAC/B,OACE,SAAC3C,EAAA,EAAD,CAAKmC,UAAWC,EAAhB,UACE,SAACvC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SAAwC,qCAK7C,ECTD,EAA+B,kCAA/B,EAAiF,mC,oECqBpE6C,EAAc,WACzB,IAAM/D,GAAWC,EAAAA,EAAAA,eACjB,GAAwBR,EAAAA,EAAAA,WAAS,GAAjC,eAAOuE,EAAP,KAAaC,EAAb,MAEA9D,EAAAA,EAAAA,YAAU,WACR8D,GAAQ,EACT,GAAE,KAEH9D,EAAAA,EAAAA,YAAU,WACRH,GAASkE,EAAAA,EAAAA,MACV,GAAE,CAAClE,IAEJ,IAAMd,GAAWgB,EAAAA,EAAAA,aAAYlB,GACvBoE,GAASlD,EAAAA,EAAAA,aAAYmD,EAAAA,IAErBc,EAAkBjF,EAASkE,QAAO,gBAAG1D,EAAH,EAAGA,KAAH,cACtCA,QADsC,IACtCA,OADsC,EACtCA,EAAMgB,cAAc0D,SAAShB,EADS,IAgBxC,OACE,UAACjC,EAAA,EAAD,CAAKmC,UAAWC,EAAhB,WACE,SAAC3C,EAAA,EAAD,CAAQC,GAAIC,EAAAA,GAAZ,UACE,SAACuD,EAAA,EAAD,OAEF,SAACrD,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAnC,SAAwC,mBAGxC,SAACoD,EAAA,EAAD,CAAMzD,GAAI,CAAE4C,MAAO,KAAnB,SACGU,EAAgBI,KAAI,YAA2B,IAAxB/C,EAAuB,EAAvBA,GAAI9B,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAChC,OACE,SAAC4E,EAAA,GAAD,CAEElB,UAAWC,EACXkB,iBACE,SAACC,EAAA,EAAD,CACEC,QAAS,kBA5BHC,EA4BuBpD,OA3B3CxB,GAAS6E,EAAAA,EAAAA,IAAoBD,IAC1BhD,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAAA,QAAA,UACKD,EAAsBpC,KAD3B,uCAGD,IACAsC,OAAM,WACLD,EAAAA,GAAAA,QAAc,2BACf,IAViB,IAAA6C,CA4BG,EACT,aAAW,SAFb,SAIGZ,GAAO,SAAC,KAAD,KAAgB,SAACc,EAAA,EAAD,MAR9B,UAYE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,WACGtF,EAAK,KAAGE,QAbR4B,EAkBV,QAIR,E,2EC/CD,EAxBqB,WACnB,IAAMnC,GAAYa,EAAAA,EAAAA,aAAYd,GACxBG,GAAQW,EAAAA,EAAAA,aAAYZ,GACpB2F,GAAY/E,EAAAA,EAAAA,aAAYlB,GAE9B,OACE,UAACkG,EAAA,EAAD,CACEjE,UAAU,OACVkE,SAAS,KACTtE,IAAIuE,EAAAA,EAAAA,IAAuBlG,GAH7B,WAKE,SAACmG,EAAA,GAAD,KACA,UAAClE,EAAA,EAAD,CAAKN,GAAIyE,EAAAA,GAAT,WACE,SAAC9F,EAAD,KACA,SAAC2D,EAAD,IACC5D,GAAQ,SAACsE,EAAD,KAAY,SAACE,EAAD,IACC,IAArBkB,EAAUM,SAAiBhG,IAAUF,IACpC,SAACyE,EAAD,SAKT,C,wMCtCM,IAAM0B,EAAiB,SAAAC,GAAK,MAAK,CACtCC,SAAU,WACVvD,gBAAiB,OACjBwD,MAAO,OACP3C,GAAI,EACJf,GAAI,GACJ2D,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,gBACpBC,gBAAgB,OAAD,OAASN,EAAT,KACfO,UAAW,IAVsB,EAatBC,EAAe,CAC1BP,SAAU,WACVQ,EAAG,CAAEC,GAAI,EAAGC,GAAI,GAChBC,GAAI,CAAED,GAAI,IAEChB,EAAyB,SAAAK,GAAK,MAAK,CAC9CC,SAAU,WACV1C,GAAI,EACJf,GAAI,GACJ2D,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,gBAAgB,OAAD,OAASN,EAAT,KAP0B,EAU9BH,EAAmB,CAC9BgB,GAAI,OACJC,aAAc,EACdpB,SAAU,IACVqB,GAAI,EACJC,UAAW,GACXxD,QAAS,OACTyD,cAAe,SACfC,WAAY,UAGDC,EAAe,CAC1BH,UAAW,EACXxD,QAAS,OACTyD,cAAe,SACfC,WAAY,SACZxE,gBAAiB,SAGN0E,EAAkB,CAC7B5D,QAAS,OACT6D,eAAgB,SAChB9D,GAAI,EACJ2D,WAAY,UAGD7F,EAAc,CACzBiG,EAAG,EACHpB,MAAO,UACPjC,QAAS,Q","sources":["redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://react-homework-template/./src/components/EmptyContactList/EmptyContactList.module.css?d3cd","components/EmptyContactList/EmptyContactList.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx","pages/StylePages.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { nanoid } from '@reduxjs/toolkit';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\nimport { avatarStyle } from 'pages/StylePages';\nimport { createContactsThunk } from 'redux/contacts/thunk';\n\nimport { Avatar, Button, TextField, Box, Typography } from '@mui/material';\nimport ContactsIcon from '@mui/icons-material/Contacts';\nimport { LoadAdd } from 'components/Loader/Loader';\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [add, setAdd] = useState(false);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  useEffect(() => {\n    setAdd(false);\n  }, [contacts]);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const data = { name, number };\n    const newObj = { ...data, id: nanoid() };\n\n    if (isNameNew(contacts, newObj) !== undefined) {\n      toast.warning(`${newObj.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(createContactsThunk(newObj))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n    reset();\n  };\n\n  const isNameNew = (contacts, newObj) => {\n    return contacts.find(\n      ({ name }) => name.toLowerCase() === newObj.name.toLowerCase()\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Avatar sx={avatarStyle}>\n        <ContactsIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Add Contact\n      </Typography>\n      <Box component=\"form\" onSubmit={onSubmitAddContact} sx={{ mt: 1 }}>\n        <TextField\n          sx={{ backgroundColor: 'rgba(255, 255, 234, 0.822)' }}\n          inputProps={{\n            inputMode: 'text',\n            pattern: '^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$',\n          }}\n          margin=\"normal\"\n          fullWidth\n          label=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          onChange={handleChange}\n        />\n        <TextField\n          sx={{ backgroundColor: 'rgba(255, 255, 234, 0.822)' }}\n          inputProps={{\n            inputMode: 'tel',\n            pattern:\n              '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n          }}\n          margin=\"normal\"\n          fullWidth\n          label=\"Phone number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter number ...\"\n          onChange={handleChange}\n        />\n        {/* <form className={css.form} onSubmit={onSubmitAddContact}>\n        <label className={css.label}>\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            value={name}\n            placeholder=\"Enter name ...\"\n            required\n          />\n        </label>\n        <label className={css.label}>\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            value={number}\n            placeholder=\"Enter number ...\"\n            required\n          />\n        </label> */}\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{\n            mt: 3,\n            mb: 2,\n            display: 'flex',\n            gap: 3,\n          }}\n        >\n          {add && <LoadAdd />}\n          <p>Add contact</p>\n        </Button>\n      </Box>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boxFilterStyle\":\"Filter_boxFilterStyle__yGhKQ\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterSet, selectContactsFilter } from 'redux/filters/slice';\nimport { Avatar, TextField, Box } from '@mui/material';\nimport PersonSearchIcon from '@mui/icons-material/PersonSearch';\nimport { avatarStyle } from 'pages/StylePages';\nimport css from './Filter.module.css';\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.currentTarget;\n    dispatch(filterSet(value));\n  };\n\n  return (\n    <Box component=\"div\" className={css.boxFilterStyle}>\n      <Avatar sx={avatarStyle}>\n        <PersonSearchIcon />\n      </Avatar>\n      <TextField\n        margin=\"normal\"\n        inputProps={{\n          inputMode: 'text',\n          pattern: '^[a-zA-Zа-яА-Я]+(([a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$',\n        }}\n        sx={{\n          width: 324,\n          bgcolor: 'rgba(255, 255, 234, 0.822)',\n        }}\n        label=\"Find contacts by name:\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        title=\"Enter the name\"\n        onChange={onChangeFilter}\n      />\n    </Box>\n  );\n};\n//       <label className={css.label}>\n//         Find contacts by name:\n//         <input\n//           className={css.input}\n//           name=\"filter\"\n//           type=\"text\"\n//           value={filter}\n//           onChange={onChangeFilter}\n//         />\n//       </label>\n//     </div>\n//   );\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperError\":\"Error_wrapperError__3jywT\"};","import { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/contactsSelectors';\n\nimport css from './Error.module.css';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <div className={css.wrapperError}>\n      <p> Нам шкода, {error}</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boxStyle\":\"EmptyContactList_boxStyle__gk4oK\"};","import css from './EmptyContactList.module.css';\nimport { Box, Typography } from '@mui/material';\nexport const EmptyContactsList = () => {\n  return (\n    <Box className={css.boxStyle}>\n      <Typography component=\"h1\" variant=\"h5\">\n        You don't have any contacts yet\n      </Typography>\n    </Box>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"boxListStyle\":\"ContactList_boxListStyle__ptPVZ\",\"listItemStyle\":\"ContactList_listItemStyle__jc82E\"};","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { selectContactsList } from 'redux/contacts/contactsSelectors';\nimport { deleteContactsThunk, getContactsThunk } from 'redux/contacts/thunk';\nimport { selectContactsFilter } from 'redux/filters/slice';\nimport { SpinerDel } from 'components/Loader/Loader';\nimport css from './ContactList.module.css';\nimport {\n  Box,\n  List,\n  Typography,\n  Avatar,\n  ListItem,\n  IconButton,\n  ListItemButton,\n  ListItemText,\n} from '@mui/material';\nimport ImportContactsIcon from '@mui/icons-material/ImportContacts';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { avatarStyle } from 'pages/StylePages';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const [load, setLoad] = useState(true);\n\n  useEffect(() => {\n    setLoad(false);\n  }, []);\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n\n  const visibleContacts = contacts.filter(({ name }) =>\n    name?.toLowerCase().includes(filter)\n  );\n\n  const deleteContact = contactId => {\n    dispatch(deleteContactsThunk(contactId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        toast.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        toast.failure(\"Sorry, something's wrong\");\n      });\n  };\n  return (\n    <Box className={css.boxListStyle}>\n      <Avatar sx={avatarStyle}>\n        <ImportContactsIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Your Contacts\n      </Typography>\n      <List sx={{ width: 396 }}>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ListItem\n              key={id}\n              className={css.listItemStyle}\n              secondaryAction={\n                <IconButton\n                  onClick={() => deleteContact(id)}\n                  aria-label=\"delete\"\n                >\n                  {load ? <SpinerDel /> : <DeleteIcon />}\n                </IconButton>\n              }\n            >\n              <ListItemButton>\n                <ListItemText>\n                  {name}: {number}\n                </ListItemText>\n              </ListItemButton>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n","import * as React from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Error } from 'components/Error/Error';\nimport { useSelector } from 'react-redux';\nimport {\n  selectContactsList,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { EmptyContactsList } from 'components/EmptyContactList/EmptyContactList';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { CssBaseline, Container, Box } from '@mui/material';\nimport contacts from 'photo/contacts.jpg';\nimport { boxContactsStyle, containerContactsStyle } from '../StylePages';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const phoneBook = useSelector(selectContactsList);\n\n  return (\n    <Container\n      component=\"main\"\n      maxWidth=\"md\"\n      sx={containerContactsStyle(contacts)}\n    >\n      <CssBaseline />\n      <Box sx={boxContactsStyle}>\n        <ContactForm />\n        <Filter />\n        {error ? <Error /> : <ContactList />}\n        {phoneBook.length === 0 && !error && !isLoading && (\n          <EmptyContactsList />\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","export const paperMainStyle = photo => ({\n  position: 'relative',\n  backgroundColor: 'grey',\n  color: '#fff',\n  mb: 1,\n  mt: 10,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center-botoom',\n  backgroundImage: `url(${photo})`,\n  minHeight: 400,\n});\n\nexport const boxMainStyle = {\n  position: 'relative',\n  p: { xs: 3, md: 2 },\n  pr: { md: 0 },\n};\nexport const containerContactsStyle = photo => ({\n  position: 'relative',\n  mb: 1,\n  mt: 10,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'bottom',\n  backgroundImage: `url(${photo})`,\n});\n\nexport const boxContactsStyle = {\n  mx: 'auto',\n  borderRadius: 5,\n  maxWidth: 500,\n  px: 5,\n  marginTop: 10,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nexport const boxFormStyle = {\n  marginTop: 8,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  backgroundColor: 'white',\n};\n\nexport const boxBottomFStyle = {\n  display: 'flex',\n  justifyContent: 'center',\n  mb: 4,\n  alignItems: 'center',\n};\n\nexport const avatarStyle = {\n  m: 1,\n  color: '#1976d2',\n  bgcolor: 'white',\n};\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","setName","number","setNumber","add","setAdd","dispatch","useDispatch","useSelector","useEffect","handleChange","target","value","isNameNew","newObj","find","toLowerCase","reset","Avatar","sx","avatarStyle","Contacts","Typography","component","variant","Box","onSubmit","event","preventDefault","data","id","nanoid","undefined","createContactsThunk","unwrap","then","originalPromiseResult","toast","catch","mt","TextField","backgroundColor","inputProps","inputMode","pattern","margin","fullWidth","label","type","title","required","placeholder","onChange","Button","mb","display","gap","Filter","filter","selectContactsFilter","className","css","PersonSearch","width","bgcolor","currentTarget","filterSet","Error","EmptyContactsList","ContactList","load","setLoad","getContactsThunk","visibleContacts","includes","ImportContacts","List","map","ListItem","secondaryAction","IconButton","onClick","contactId","deleteContactsThunk","Delete","ListItemButton","ListItemText","phoneBook","Container","maxWidth","containerContactsStyle","CssBaseline","boxContactsStyle","length","paperMainStyle","photo","position","color","backgroundSize","backgroundRepeat","backgroundPosition","backgroundImage","minHeight","boxMainStyle","p","xs","md","pr","mx","borderRadius","px","marginTop","flexDirection","alignItems","boxFormStyle","boxBottomFStyle","justifyContent","m"],"sourceRoot":""}